import torch

# narrow(입력 텐서, 차원, 시작, 길이)
a = torch.Tensor( [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ] )
print(torch.narrow(a, 0, 0, 2)) # [ [1., 2., 3.], [4., 5., 6.] ]
print(torch.narrow(a, 1, 1, 2)) # [ [2., 3.], [5., 6.], [8., 9.] ]
b = torch.Tensor( [ [ [1, 2, 3, 4], [5, 6, 7, 8] ], [ [9, 10, 11, 12], [13, 14, 15, 16] ] ] )
# b를 다음과 같이 바꿔 보세요. --> [ [ [ 2., 3.], [ 6., 7.] ], [ [10., 11.], [14., 15.] ] ] 
print(torch.narrow(b, 2,1,2))


# expand(*sizes) --> 개수가 1인 차원의 텐서를 확장
a = torch.Tensor( [ [1], [2], [3] ] )
print( a.size() , a.expand(3, 4) ) # [ [1., 1., 1.], [2., 2., 2.], [3., 3., 3.] ]
b = torch.Tensor( [ [ [ [1], [1], [1] ], [ [2], [2], [2] ] ], [ [ [3], [3], [3] ], [ [4], [4], [4] ] ] ] )
# b를 확장해 보세요. [1] --> [1., 1., 1., 1.]와 같이 마지막 차원의 개수를 4개로 확장
print( b.size(),b.expand(2,2,3,4))